const TelegramBot = require('node-telegram-bot-api');
const { Extra, Markup } = require('telegraf');

const contactButtons = Markup.inlineKeyboard([
    [Markup.button.url('Instagram', 'https://www.instagram.com/bektenalieva_a/')],
    [Markup.button.url('WhatsApp', 'https://wa.me/996550915445')],
    [Markup.button.url('Telegram', 'https://t.me/@AltynaiGold')],
    // Markup.button.url('–°–æ—Ç–æ–≤—ã–π', 'tel://+996999550233'),
    // Markup.button.text('+996999550233'),
    // Markup.button.text("–ù–∞ –≥–ª–∞–≤–Ω—É—é"),
]);

const token = '6804568950:AAG1Azj4zNUX0gYAX1P5tXdeA21wWJpjIqw';
const bot = new TelegramBot(token, { polling: true });

const mainKeyboards = [
    ['–ù–∞—à–∏ –±—Ä–µ–Ω–¥—ã üéñ', "–û—Ç–∑—ã–≤—ã ‚Ü©Ô∏è"],
    ["–ü—Ä–æ–¥—É–∫—Ç—ã üõçüåø"],
    ['–û –∫–æ–º–ø–∞–Ω–∏–∏ ‚ÑπÔ∏è', '–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è üèÜ'],
    ["–ö–æ–Ω—Ç–∞–∫—Ç—ã ‚úâÔ∏è"],
];
const youtubeVideos = [
    { description: "–¢–∞–æ–≤–∏—Ç–∞ –¥–µ–ª–∞–µ—Ç —á—É–¥–µ—Å–∞!", url: "https://youtu.be/ChoN9Q2WsLU?si=BYf_Ejqtv47jjMvM" },
    { description: "–¢–∞–æ–≤–∏—Ç–∞. –®–∞—Ç–∞—é—â–∏–µ—Å—è –ó—É–±—ã —É–∫—Ä–µ–ø–ª—è—é—Ç—Å—èüëç", url: "https://youtu.be/7gJKgD_TOUQ?si=xc9wRZIyZawO3Vsd" },
    { description: "–¢–∞–æ–≤–∏—Ç–∞ –î–µ–ª–∞–µ—Ç —á—É–¥–µ—Å–∞üëç", url: "https://youtu.be/gg2hrbKs_PI?si=q7gWxuEoM6gx1xN0" },
    { description: "–ù–µ –≤–∏–¥–µ–≤—à–∏–µ –≥–ª–∞–∑–∞ –Ω–∞—á–∞–ª–∏ –≤–∏–¥–µ—Ç—å –æ—Ç –¢–∞–æ–≤–∏—Ç–∞", url: "https://youtu.be/rTrjwAw1-xI?si=2PfzbE6EdIuTO11q" },
    { description: "–¢–∞–æ–≤–∏—Ç–∞. –†–µ—à–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å –ü—Ä–æ—Å—Ç–∞—Ç–∏—Ç–æ–ºüëç", url: "https://youtu.be/IydO3iiTVZM?si=kI9ngZfE8RcZz0GR" },
];

let isFirstVideo = true;
let isLastVideo = false;
let lastReviewId;
let currentReviewIndex = 0;


bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    const opts = {
        reply_markup: JSON.stringify({
            keyboard: mainKeyboards,
            resize_keyboard: true,
            one_time_keyboard: true
        })
    };
    bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:', opts);
});
bot.on('callback_query', (query) => {
    const chatId = query.message.chat.id;
    const messageId = query.message.message_id;

    bot.deleteMessage(chatId, lastReviewId);

    if (isFirstVideo) isFirstVideo = false;
    // if (currentReviewIndex !== (youtubeVideos.length - 1)) isLastVideo = false;


    if (query.data === "nextReview") {
        currentReviewIndex++
        if (currentReviewIndex === (youtubeVideos.length - 1)) isLastVideo = true;
        bot.sendMessage(chatId, `${youtubeVideos[currentReviewIndex].description}

${youtubeVideos[currentReviewIndex].url}`,
            {
                reply_markup: {
                    inline_keyboard: [
                        isFirstVideo ?
                            [{ text: '–°–ª–µ–¥—É—é—â–∏–π –æ—Ç–∑—ã–≤', callback_data: 'nextReview' }] : (
                                isLastVideo ?
                                    [
                                        { text: '–ü—Ä–µ–¥—ã–¥—É—â–∏–π –æ—Ç–∑—ã–≤', callback_data: 'prevReview' },
                                    ] : [
                                        { text: '–ü—Ä–µ–¥—ã–¥—É—â–∏–π –æ—Ç–∑—ã–≤', callback_data: 'prevReview' },
                                        { text: '–°–ª–µ–¥—É—é—â–∏–π –æ—Ç–∑—ã–≤', callback_data: 'nextReview' }
                                    ]),
                    ]
                }
            }).then(sentMessage => {
                lastReviewId = sentMessage.message_id;
            });
    } else {
        currentReviewIndex--
        if (currentReviewIndex === 0) isFirstVideo = true;
        bot.sendMessage(chatId, `${youtubeVideos[currentReviewIndex].description}

${youtubeVideos[currentReviewIndex].url}`,
            {
                reply_markup: {
                    inline_keyboard: [
                        isFirstVideo ?
                            [{ text: '–°–ª–µ–¥—É—é—â–∏–π –æ—Ç–∑—ã–≤', callback_data: 'nextReview' }] :
                            [
                                { text: '–ü—Ä–µ–¥—ã–¥—É—â–∏–π –æ—Ç–∑—ã–≤', callback_data: 'prevReview' },
                                { text: '–°–ª–µ–¥—É—é—â–∏–π –æ—Ç–∑—ã–≤', callback_data: 'nextReview' }
                            ],
                    ]
                }
            }).then(sentMessage => {
                lastReviewId = sentMessage.message_id;
            });
    }
});

bot.on('message', (msg) => {
    const chatId = msg.chat.id;
    let opts;
    let photo;
    switch (msg.text) {
        case "–ë—Ä–µ–Ω–¥—ã":
        case "–±—Ä–µ–Ω–¥—ã":
        case "–ù–∞—à–∏ –±—Ä–µ–Ω–¥—ã":
        case "–Ω–∞—à–∏ –±—Ä–µ–Ω–¥—ã":
        case "–ù–∞—à–∏ –±—Ä–µ–Ω–¥—ã üéñ":
            opts = {
                reply_markup: JSON.stringify({
                    keyboard: [
                        ['FEEL FAST', 'REGENE COLLAGEN'],
                        ['NUOVO'],
                        ["–ù–∞ –≥–ª–∞–≤–Ω—É—é"]
                    ],
                    resize_keyboard: true,
                    one_time_keyboard: true
                })
            };
            bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –±—Ä–µ–Ω–¥, –æ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å', opts);
            break
        case "–û—Ç–∑—ã–≤—ã ":
        case "–æ—Ç–∑—ã–≤—ã":
        case "–û—Ç–∑—ã–≤—ã ‚Ü©Ô∏è":
            bot.sendMessage(chatId, `${youtubeVideos[0].description}

${youtubeVideos[0].url}`,
                {
                    reply_markup: {
                        inline_keyboard: [
                            isFirstVideo ?
                                [{ text: '–°–ª–µ–¥—É—é—â–∏–π –æ—Ç–∑—ã–≤', callback_data: 'nextReview' }] :
                                [
                                    { text: '–ü—Ä–µ–¥—ã–¥—É—â–∏–π –æ—Ç–∑—ã–≤', callback_data: 'prevReview' },
                                    { text: '–°–ª–µ–¥—É—é—â–∏–π –æ—Ç–∑—ã–≤', callback_data: 'butnextReviewton2' }
                                ],
                        ]
                    }
                }).then(sentMessage => {
                    lastReviewId = sentMessage.message_id;
                });
            break
        case "–ì–ª–∞–≤–Ω–∞—è":
        case "–≥–ª–∞–≤–Ω–∞—è":
        case "–Ω–∞ –≥–ª–∞–≤–Ω—É—é":
        case "–ù–∞ –≥–ª–∞–≤–Ω—É—é":
            opts = {
                reply_markup: JSON.stringify({
                    keyboard: mainKeyboards,
                    resize_keyboard: true,
                    one_time_keyboard: true
                })
            };
            bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:', opts);
            break
        case "FEEL FAST":
            photo = 'https://taovita.ru/static/img/0723-feel-fast.png';
            bot.sendPhoto(chatId, photo, {
                caption: `FEEL FAST
–ù–∞–ø–∏—Ç–∫–∏ –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–ª—è –æ—á–∏—â–µ–Ω–∏—è, –æ–º–æ–ª–æ–∂–µ–Ω–∏—è –∏ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ –æ–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏—è –æ—Ä–≥–∞–Ω–∏–∑–º–∞.
–í —Å–æ—Å—Ç–∞–≤–µ:
üîπ  –ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≥—Ä–∞–Ω–∞—Ç–æ–≤—ã–π —Å–æ–∫
üîπ  –§—É–∫–æ–∏–¥–∞–Ω ‚Äî —Ä–µ–≥—É–ª—è—Ç–æ—Ä –∏–º–º—É–Ω–∏—Ç–µ—Ç–∞, —É—Å–∏–ª–∏–≤–∞–µ—Ç –∑–∞—â–∏—Ç–Ω—ã–µ —Å–∏–ª—ã –æ—Ä–≥–∞–Ω–∏–∑–º–∞
üîπ  –†–µ—Å–≤–µ—Ä–∞—Ç—Ä–æ–ª –∏ —è–Ω—Ç–∞—Ä–Ω–∞—è –∫–∏—Å–ª–æ—Ç–∞ ‚Äî –º–æ—â–Ω—ã–µ –∞–Ω—Ç–∏–æ–∫—Å–∏–¥–∞–Ω—Ç—ã
üîπ  –ü–µ–ø—Ç–∏–¥—ã ‚Äî –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–ª–µ—Ç–æ–∫`
            });
            break
        case "REGENE COLLAGEN":
            photo = 'https://taovita.ru/static/img/0723-regene-collagen.png';
            bot.sendPhoto(chatId, photo, {
                caption: `REGENE COLLAGEN
–ü–∏—Ç—å–µ–≤–æ–π –∫–æ–ª–ª–∞–≥–µ–Ω –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è –∫–æ–∂–∏ –∏ –∫–æ—Å—Ç–Ω–æ–π —Ç–∫–∞–Ω–∏.
–ö–æ–ª–ª–∞–≥–µ–Ω ‚Äî —ç—Ç–æ —Å–æ–µ–¥–∏–Ω–∏—Ç–µ–ª—å–Ω—ã–π –±–µ–ª–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —É–ø—Ä—É–≥–æ—Å—Ç—å –∏ —Ç–æ–Ω—É—Å –∫–æ–∂–∏, —É–∫—Ä–µ–ø–ª—è–µ—Ç —Å—É—Å—Ç–∞–≤—ã –∏ —Å–≤—è–∑–∫–∏
–í —Å–æ—Å—Ç–∞–≤–µ:
üîπ  –ö–æ–ª–ª–∞–≥–µ–Ω ‚Äî –æ—Å–Ω–æ–≤–∞ —Å–æ–µ–¥–∏–Ω–∏—Ç–µ–ª—å–Ω–æ —Ç–∫–∞–Ω–∏
üîπ  –ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ —Å–æ–∫–∏ –∏ —ç–∫—Å—Ç—Ä–∞–∫—Ç—ã, –±–æ–≥–∞—Ç—ã–µ –≤–∏—Ç–∞–º–∏–Ω–æ–º –°
üîπ  –§—É–∫–æ–∏–¥–∞–Ω ‚Äî —Ä–µ–≥—É–ª—è—Ç–æ—Ä –∏–º–º—É–Ω–∏—Ç–µ—Ç–∞, —É—Å–∏–ª–∏–≤–∞–µ—Ç –∑–∞—â–∏—Ç–Ω—ã–µ —Å–∏–ª—ã –æ—Ä–≥–∞–Ω–∏–∑–º–∞
üîπ  –ö–æ—ç–Ω–∑–∏–º Q10 ‚Äî –∞–Ω—Ç–∏–æ–∫—Å–∏–¥–∞–Ω—Ç –º–æ–ª–æ–¥–æ—Å—Ç–∏ –∏ –∫—Ä–∞—Å–æ—Ç—ã
üîπ  –•–æ–Ω–¥—Ä–æ–∏—Ç–∏–Ω –∏ –≥–ª—é–∫–æ–∑–∞–º–∏–Ω ‚Äî –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å—É—Å—Ç–∞–≤–æ–≤`
            });
            break
        case "NUOVO":
            photo = 'https://taovita.ru/static/img/0723-nuovo_full.png';
            bot.sendPhoto(chatId, photo, {
                caption: `NUOVO
–ú–∏—Ü–µ–ª–ª—è—Ä–Ω—ã–π –±–∏–æ–∫–æ–º–ø–ª–µ–∫—Å —Å —Ñ–æ—Å—Ñ–æ–ª–∏–ø–∏–¥–∞–º–∏ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è –≤—Å–µ–≥–æ –æ—Ä–≥–∞–Ω–∏–∑–º–∞
–í —Å–æ—Å—Ç–∞–≤–µ:
üîπ  –§–æ—Å—Ñ–æ–ª–∏–ø–∏–¥—ã ‚Äî –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç –∫–ª–µ—Ç–æ—á–Ω—ã–π –∫–∞—Ä–∫–∞—Å
üîπ  –ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ –º–∞—Å–ª–∞, –û–º–µ–≥–∞ 3-6-9
üîπ  –ü–µ–ø—Ç–∏–¥—ã ‚Äî –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–µ—Ç–æ–∫
üîπ  –û—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–π –≥–µ—Ä–º–∞–Ω–∏–π ‚Äî –ø—Ä–æ—Ç–∏–≤–æ–æ–ø—É—Ö–æ–ª–µ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
üîπ  –ë–∏–æ–∫–æ–º–ø–ª–µ–∫—Å—ã –ø–æ–ª–µ–∑–Ω—ã—Ö —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ–≤`
            });
            break
        case "–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è":
        case "–¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è":
        case "–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è üèÜ":
            opts = {
                reply_markup: JSON.stringify({
                    keyboard: [
                        ...mainKeyboards,
                        ["–ù–∞ –≥–ª–∞–≤–Ω—É—é"]
                    ],
                    resize_keyboard: true,
                    one_time_keyboard: true
                })
            };
            bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:', opts);
            break
        case "–ö–æ–º–ø–∞–Ω–∏—è":
        case "–∫–æ–º–ø–∞–Ω–∏—è":
        case "–û –∫–æ–º–ø–∞–Ω–∏–∏":
        case "–æ –∫–æ–º–ø–∞–Ω–∏–∏":
        case "–û –∫–æ–º–ø–∞–Ω–∏–∏ ‚ÑπÔ∏è":
            const caption1 = `¬´–¢–êOVITA¬ª ‚Äî —Ä–æ—Å—Å–∏–π—Å–∫–∞—è —Ç–æ—Ä–≥–æ–≤–æ-–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è, –æ—Å–Ω–æ–≤–∞–Ω–Ω–∞—è –≤ 2019 –≥–æ–¥—É. –û—Å–Ω–æ–≤–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ ‚Äî –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö, –≤—ã—Å–æ–∫–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è, –Ω–µ –∏–º–µ—é—â–∏—Ö –∞–Ω–∞–ª–æ–≥–æ–≤ –≤ –º–∏—Ä–µ.

üå±–í—Å—è –ø—Ä–æ–¥—É–∫—Ü–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–∞ —Å —Ü–µ–ª—å—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ —É–∫—Ä–µ–ø–ª–µ–Ω–∏—è –∑–¥–æ—Ä–æ–≤—å—è —á–µ–ª–æ–≤–µ–∫–∞, –¥–ª—è –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –∏ –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞.`
            const caption2 = `üíØ–ú—ã —É—Å–ø–µ—à–Ω–æ —Ä–µ–∞–ª–∏–∑—É–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—ã –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–æ–ª–≥–æ–ª–µ—Ç–∏—è, –ø—Ä–æ–¥–ª–µ–Ω–∏—è –º–æ–ª–æ–¥–æ—Å—Ç–∏ –∏ –∫—Ä–∞—Å–æ—Ç—ã, –∞ —Ç–∞–∫–∂–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞.
¬´–¢–êOVITA¬ª –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –≤ –†–æ—Å—Å–∏–∏

–ü—Ä–∏ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∞–º—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∑–≤–æ–ª—è—é—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ø–æ–≤—ã—Å–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –∏ —É—Å–≤–æ—è–µ–º–æ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
–£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –Ω–∞—à–∏—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç–æ–∫ ‚Äì –≤ —Å–æ—á–µ—Ç–∞–Ω–∏–∏ –≤—ã—Å–æ–∫–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ –º–Ω–æ–≥–æ–≤–µ–∫–æ–≤—ã—Ö –∑–Ω–∞–Ω–∏–π –∫–∏—Ç–∞–π—Å–∫–æ–π –º–µ–¥–∏—Ü–∏–Ω—ãüéã`
            const caption3 = `¬´–ú–´ –°–û–ó–î–ê–ï–ú –í–û–ó–ú–û–ñ–ù–û–°–¢–ò¬ª

‚úÖ–ó–¥–æ—Ä–æ–≤—å–µ
–£–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–≤–æ–µ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è –∏ –∑–¥–æ—Ä–æ–≤—å—è –±–ª–∏–∑–∫–∏—Ö —Å –ø–æ–º–æ—â—å—é —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä–∞—è –¥–æ–∫–∞–∑–∞–ª–∞ —Å–≤–æ—é —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ
‚úÖ–û–±—É—á–µ–Ω–∏–µ
–î–æ—Å—Ç—É–ø –∫ –∞–∫—Ç—É–∞–ª—å–Ω—ã–º –∑–Ω–∞–Ω–∏—è–º –∏ –Ω–∞–≤—ã–∫–∞–º, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤–µ—Ä–Ω—ã–µ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –±–∏–∑–Ω–µ—Å–æ–º
‚úÖ–ë–∏–∑–Ω–µ—Å
–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏ —Ä–∞–∑–≤–∏—Ç–∏—è —Å–≤–æ–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞ –Ω–∞ –≤—ã–≥–æ–¥–Ω—ã—Ö –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö, —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
‚úÖ–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç
–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤—ã–µ –±—Ä–µ–Ω–¥—ã, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∏ –∑–∞–ø–∞—Ç–µ–Ω—Ç–æ–≤–∞–Ω–Ω—ã—Ö –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —Å–æ—Å—Ç–∞–≤–æ–≤ ‚Äî –Ω–∞ –ø–æ–ª—å–∑—É –ª—é–¥—è–º`
            const images = [
                { type: 'photo', media: 'https://taovita.ru/static/img/about_pano.jpg', caption1 },
                { type: 'photo', media: './static/img/taovita_medicine.png', caption2 },
                { type: 'photo', media: 'https://taovita.ru/static/img/additional.jpg', caption3 },
            ];
            opts = {
                reply_markup: JSON.stringify({
                    keyboard: [
                        ...mainKeyboards,
                        ["–ù–∞ –≥–ª–∞–≤–Ω—É—é"]
                    ],
                    resize_keyboard: true,
                    one_time_keyboard: true
                })
            };
            bot.sendPhoto(chatId, images[0].media, { caption: caption1 });
            bot.sendPhoto(chatId, images[1].media, { caption: caption2 });
            bot.sendPhoto(chatId, images[2].media, { caption: caption3 });
            bot.sendMessage(chatId, '–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ –≥–ª–∞–≤–Ω–æ–π', opts);
            break
        case "–ö–æ–Ω—Ç–∞–∫—Ç—ã":
        case "–∫–æ–Ω—Ç–∞–∫—Ç—ã":
        case "–ö–æ–Ω—Ç–∞–∫—Ç—ã ‚úâÔ∏è":
            opts = {
                reply_markup: JSON.stringify({
                    keyboard: [
                        ...mainKeyboards,
                    ],
                    resize_keyboard: true,
                    one_time_keyboard: true
                })
            };
            bot.sendMessage(chatId, `–ú–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã:
–°–æ—Ç–æ–≤—ã–π: +996550915445`, contactButtons);
            bot.sendMessage(chatId, `–ì–ª–∞–≤–Ω–∞—è`, opts);
    }
});
